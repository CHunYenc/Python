/*HW5-6.請使用for指令設計一程式讓使用者輸入n，
並印出下面的圖案(下圖為n=5時顯示的2n-1層正菱形 
【學號末碼為0,1,5,6請做此題】

    *
   * *
  *   *
 *     *
*       *
 *     *
  *   *
   * *
    *   
*/ 
#include <stdio.h>
#include <stdlib.h>
int main()
{
	int n=0; //宣告n=0 
	printf("請輸入n:");	//印出 請輸入n: 
	scanf("%d",&n);	//使用者輸入n 
	fflush(stdin); //清除暫存 
	
	for(int a=1;a<=n;a++) //上方三角形 
	{
    	for(int b=n-a;b>0;b--) //印出左上方空白 
		{
			printf(" ");	//印出空白 
    	}
    	for(int c=1;c<=1+(2*(a-1));c++)	//找出*出現的規律 為 1+(2*(a-1)) 開始產生迴圈   c為上方三角形的外面 * 號 
    	{
			if(1==c ||c==1+(2*(a-1))) //如果 1等於c 或 c=公式 前者為左上 後者為右上 
			{
        		printf("*");	//印出 * 號 
        	}
			else	//否則  
			{
        		printf(" ");	//印出空白 
			}
            
            if(c==1+(2*(a-1)))	//如果 c == 公式 
            {
                printf("\n");	//就會分行 
            }
        }
    }
    for(int c=1;c<n;c++)	//下方三角形 
	{
        for(int b=1;b<=c;b++)	//菱形左下方空白處 
		{
            printf(" ");	//印出空白 
        }
        for(int y=1+(n-c-1)*2;y>0;y--)	//找出*出現的規律 為 1+(n - c -1)*2 開始產生迴圈  Y為下方三角形的外面 * 號
		{   
            if(y==1+(n-c-1)*2 || y-1==0) //如果y=下方三角形公式 或 y-1==0 前者為左下 後者為左下 
			{
                printf("*");	//印出* 
            }
			else
			{
                printf(" ");	//印出空白 
            }
            if(y-1 == 0)	//因為會碰到最後一個*號所以要分行 
            {
                printf("\n"); //印出分行 
            }
            
        }
    }
						
	system("pause");
	return 0;
 }

